// Code generated by GoTool. DO NOT EDIT.

package service

import (
	"context"
	"encoding/json"
	"net/http"

	"github.com/go-kit/kit/endpoint"
	"github.com/go-kit/kit/log"
	kithttp "github.com/go-kit/kit/transport/http"
	"github.com/gorilla/mux"
)

type errorWrapper struct {
	Error string `json:"error"`
}

func NewHTTPHandler(s Interface, set Set, edSet EncodeDecodeSet, logger log.Logger, opts ...kithttp.ServerOption) http.Handler {
	opts = append(opts, kithttp.ServerErrorEncoder(errorEncoder))
	resizeHandler := kithttp.NewServer(set.ResizeEndpoint, edSet.Server.DecodeHTTPResizeRequest, encodeHTTPGenericResponse, opts...)
	resizeByURLHandler := kithttp.NewServer(set.ResizeByURLEndpoint, edSet.Server.DecodeHTTPResizeByURLRequest, encodeHTTPGenericResponse, opts...)
	r := mux.NewRouter()
	r.Handle("/resize", resizeHandler).Queries("width", "{width:[0-9]+}", "height", "{height:[0-9]+}").Methods("POST")
	r.Handle("/resize", resizeByURLHandler).Queries("url", "{url}", "width", "{width:[0-9]+}", "height", "{height:[0-9]+}").Methods("GET")
	return r
}

func errorEncoder(_ context.Context, err error, w http.ResponseWriter) {
	w.WriteHeader(err2code(err))
	json.NewEncoder(w).Encode(errorWrapper{Error: err.Error()})
}

func err2code(err error) int {
	switch err {
	case ErrDataEmpty, ErrFailedLoadURL:
		return http.StatusBadRequest
	default:
		return http.StatusInternalServerError
	}
}

func encodeHTTPGenericResponse(ctx context.Context, w http.ResponseWriter, response interface{}) error {
	if f, ok := response.(endpoint.Failer); ok && f.Failed() != nil {
		errorEncoder(ctx, f.Failed(), w)
		return nil
	}
	w.Header().Set("Content-Type", "application/json; charset=utf-8")
	return json.NewEncoder(w).Encode(response)
}

func encodeError(ctx context.Context, err error, w http.ResponseWriter) {
	w.Header().Set("Content-Type", "application/json; charset=utf-8")
	json.NewEncoder(w).Encode(map[string]interface{}{"error": err.Error()})
}

type EncodeDecodeSet struct {
	Server struct {
		DecodeHTTPResizeRequest      kithttp.DecodeRequestFunc
		DecodeHTTPResizeByURLRequest kithttp.DecodeRequestFunc
	}
	Client struct {
		DecodeHTTPResizeResponse      kithttp.DecodeResponseFunc
		DecodeHTTPResizeByURLResponse kithttp.DecodeResponseFunc
	}
}
